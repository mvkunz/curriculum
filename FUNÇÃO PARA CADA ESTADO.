MODELO ANTERIOR PARA ESTUDOS:
function App() {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [schooling, setSchooling] = useState('M√©dio');
  const [resume, setResume] = useState('');
  const [terms, setTerms] = useState(false);
  const [error, setError] = useState(false);
 

  function resetForm() {
    setName('');
    setEmail('');
    setSchooling('');
    setResume('');
  } // fun√ß√£o para apagar os inputs.

  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {
    event.preventDefault();
    if (terms) {
      alert(
        `Nome: ${name}\nemail: ${email}\nEscolaridade:${schooling}\nExperi√™ncias: ${resume}`
      );
      resetForm();
    } else {
      setError(true);
    }
  }

  return (
    <>
      <form onSubmit={(event) => handleSubmit(event)}>
        <label>
          Nome
          <input
            value={ name }
            onChange={({ target }) => setName(target.value)}
          />
        </label>
        <label>
          E-mail
          <input
            value={ email }
            onChange={({ target }) => setEmail(target.value)}
          />
        </label>
        <label>
          Escolaridade
          <select
            value={ schooling }
            onChange={({ target }) => setSchooling(target.value)}
          >
            <option value="M√©dio">M√©dio</option>
            <option value="Superior">Superior</option>
            <option value="P√≥s-gradua√ß√£o">P√≥s-gradua√ß√£o</option>
          </select>
        </label>
        <label>
          Resumo das experi√™ncias
          <textarea
            value={ resume }
            onChange={({ target }) => setResume(target.value)}
          />
        </label>
        <label>
          Aceito os termos e condi√ß√µes!
          <input
            type="checkbok"
            checked={ terms }
            onChange={() => setTerms((prevTerms) => !prevTerms)}
          />

        </label>
        <button>Enviar</button>
      </form>
      {error && (
        <h4>Voc√™ precisa aceitar os termos e condi√ß√µes para enviar o curr√≠culo! üòÖ</h4>
      )}
    </>
  );
}

// *  criar uma renderiza√ß√£o condicional: se o formul√°rio foi submetido sem o checkbox marcado, uma mensagem de erro ser√° mostrada.
// √© preciso realizar a valida√ß√£o no handleSubmit: se o checkbox estiver assinalado, ou seja, se o valor do estado terms for verdadeiro, o curr√≠culo ser√° cadastrado normalmente. Em caso negativo, transformar√° o estado error em true, e a mensagem de erro ser√° renderizada.